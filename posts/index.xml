<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 董先森博客</title>
    <link>https://dwg678.github.io/posts/</link>
    <description>Recent content in Posts on 董先森博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 15 May 2019 14:07:04 +0800</lastBuildDate>
    
	<atom:link href="https://dwg678.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Windows下搭建Hugo博客</title>
      <link>https://dwg678.github.io/2019/blog/</link>
      <pubDate>Wed, 15 May 2019 14:07:04 +0800</pubDate>
      
      <guid>https://dwg678.github.io/2019/blog/</guid>
      <description>★内容参考B站Up主CodeSheep，视频地址：https://www.bilibili.com/video/av51574688 我整理了Windows下的操作方法，如下：
1：在https://github.com/gohugoio/hugo/releases地址下找到Windows压缩文件下载，如下图你可以下载32或者64位的
!|yukundio9527|(https://img2018.cnblogs.com/blog/1033328/201905/1033328-20190513103543080-42645007.png )
2:如何看hugo安装成没成功，打开cmd，输入hugo version，如图所示，则代表安装成功 !|yukundio9527|( https://img2018.cnblogs.com/blog/1033328/201905/1033328-20190513104311337-59247151.png)
3：安装成功后，用Hugo还创建自己的博客，命令如下图所示：hugo new site myblog 注：myblog为文件夹名字名字 !|yukundio9527|( https://img2018.cnblogs.com/blog/1033328/201905/1033328-20190513104400669-308164512.png)
3：输入dir，能看到文件夹已经创建好了，如图 !|yukundio9527|( https://img2018.cnblogs.com/blog/1033328/201905/1033328-20190513104746195-1847106720.png)
4：我们进入到myblog里面，可以看到如下内容 !|yukundio9527|( https://img2018.cnblogs.com/blog/1033328/201905/1033328-20190513105110070-410624344.png)
5:下载设置主题，去https://themes.gohugo.io/选择自己喜欢的主题进行下载，如图
!|yukundio9527|( https://img2018.cnblogs.com/blog/1033328/201905/1033328-20190513105411063-698289161.png)
6：这里我选择m10c，以他为例子，具体操作如图显示。注：前提一定要下git并且配置好！
!|yukundio9527|(https://img2018.cnblogs.com/blog/1033328/201905/1033328-20190513105733247-1170336546.png )
7：主题下载成功如图 !|yukundio9527|( https://img2018.cnblogs.com/blog/1033328/201905/1033328-20190513110131643-1221757335.png)
8：去themes下，看看有没有，如图有啦 !|yukundio9527|( https://img2018.cnblogs.com/blog/1033328/201905/1033328-20190513110358274-876342732.png)
9：启动博客命令，输入 hugo server -t m10c &amp;ndash;buildDrafts !|yukundio9527|( https://img2018.cnblogs.com/blog/1033328/201905/1033328-20190513110652873-1708790104.png)
10：如图所示，出来了 !|yukundio9527|( https://img2018.cnblogs.com/blog/1033328/201905/1033328-20190513110844450-463620106.png)
11：接下来就是创建文章，我们继续在根目录下创建，如图 !|yukundio9527|( https://img2018.cnblogs.com/blog/1033328/201905/1033328-20190513111404737-367248422.png)
12：那怎么写呢，推荐用VS Code来写，写完后记得保存！如图 !|yukundio9527|(https://img2018.cnblogs.com/blog/1033328/201905/1033328-20190513113621727-277941586.png)
13：然后再根目录下输入指令 hugo server -t m10c &amp;ndash;buildDrafts，如图 !|yukundio9527|( https://img2018.cnblogs.com/blog/1033328/201905/1033328-20190513112328506-2027514860.png)
14：再打开http://localhost:1313，如图 !|yukundio9527|( https://img2018.cnblogs.com/blog/1033328/201905/1033328-20190513113807091-839861697.png)
15：把博客部署的远端github上，首先创建仓库，如图 !|yukundio9527|(https://img2018.cnblogs.com/blog/1033328/201905/1033328-20190513115447195-446798861.png )
16：仓库已经有了，但是个空仓库，接下来敲命令hugo &amp;ndash;theme=m10c &amp;ndash;baseUrl=&amp;ldquo;地址&amp;rdquo; &amp;ndash;buildDrafts，如图 !|yukundio9527|(https://img2018.cnblogs.com/blog/1033328/201905/1033328-20190513115904234-1855386864.png )</description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>https://dwg678.github.io/2014/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://dwg678.github.io/2014/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://dwg678.github.io/2014/goisforlovers/</link>
      <pubDate>Mon, 28 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://dwg678.github.io/2014/goisforlovers/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://dwg678.github.io/2014/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://dwg678.github.io/2014/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://dwg678.github.io/2014/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://dwg678.github.io/2014/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
  </channel>
</rss>